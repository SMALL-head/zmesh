# 调试sidecar用的，两个容器，第一个是envoy容器，内置envoy引擎，另一个是调试Pod，内置各种工具，比如iptables,git之类的

apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
  namespace: default
data:
  bootstrap.yaml: |
    static_resources:
      listeners:
      # === Outbound: 8090 ===
      - name: listener_outbound_8090
        address:
          socket_address: { address: 0.0.0.0, port_value: 8090 }
        listener_filters:
        - name: envoy.filters.listener.original_dst
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.listener.original_dst.v3.OriginalDst
        # transparent: true
        filter_chains:
        - filters:
          - name: envoy.filters.network.tcp_proxy
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
              stat_prefix: tcp_outbound
              cluster: cluster_original_dst

      # === Inbound: 8092 ===
      - name: listener_inbound_8092
        address:
          socket_address: { address: 0.0.0.0, port_value: 8092 }
        listener_filters:
        - name: envoy.filters.listener.original_dst
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.listener.original_dst.v3.OriginalDst
        # transparent: true
        filter_chains:
        - filters:
          - name: envoy.filters.network.tcp_proxy
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
              stat_prefix: tcp_inbound
              cluster: cluster_original_dst

      clusters:
      - name: cluster_original_dst
        type: ORIGINAL_DST
        connect_timeout: 5s
        lb_policy: CLUSTER_PROVIDED
        # 可选：如需为每个目标创建独立连接池
        original_dst_lb_config:
          use_http_header: false

    admin:
      address:
        socket_address: { address: 127.0.0.1, port_value: 15000 }

---
apiVersion: v1
kind: Pod
metadata:
  name: envoy-debug-pod
  namespace: default
spec:
  containers:
  - name: config-container
    securityContext:
      capabilities:
        add:
          - NET_ADMIN
          - NET_RAW
    image: registry.cn-shanghai.aliyuncs.com/carl-zyc/godev:v1
    resources:
      limits:
        memory: "1024Mi"
        cpu: "1500m"
      requests:
        memory: "1024Mi"
        cpu: "1500m"
    command: ["tail", "-f", "/dev/null"]

  - name: envoy
    image: envoyproxy/envoy:v1.32-latest
    securityContext:
      runAsUser: 1337
      runAsGroup: 1337  # 组ID 0是root组，给予root组权限
      runAsNonRoot: false
      # capabilities:
      #   add:
      #   - NET_ADMIN
      #   - NET_RAW
    command: ["/usr/local/bin/envoy"]
    args:
    - --config-path
    - /etc/envoy/bootstrap.yaml
    - --log-level
    - info
    ports:
    - containerPort: 8090
      name: outbound
    - containerPort: 8092
      name: inbound
    volumeMounts:
    - name: envoy-config
      mountPath: /etc/envoy
    resources:
      limits:
        cpu: "2"
        memory: "1024Mi"
      requests:
        cpu: "1"
        memory: "1024Mi"
    # livenessProbe:
    #   httpGet:
    #     path: /ready
    #     port: 15000
    #   initialDelaySeconds: 5
    #   periodSeconds: 10
    # readinessProbe:
    #   httpGet:
    #     path: /ready
    #     port: 15000
    #   initialDelaySeconds: 5
    #   periodSeconds: 10
      
  - name: debug-tools
    image: registry.cn-shanghai.aliyuncs.com/carl-zyc/busybox:v3
    securityContext:
      privileged: true  # 给予特权模式
      capabilities:
        add:
        - NET_ADMIN
        - NET_RAW
    command: ["tail", "-f", "/dev/null"]
    resources:
      limits:
        cpu: "2"
        memory: "512Mi"
      requests:
        cpu: "1"
        memory: "512Mi"
    volumeMounts:
    - name: envoy-config
      mountPath: /etc/envoy
      readOnly: true  # 调试容器只需要读取权限
      
  volumes:
  - name: envoy-config
    configMap:
      name: envoy-config
      items:
      - key: bootstrap.yaml
        path: bootstrap.yaml